What TO do:

    First:  start the Timer Thread, and start a thread that will check if spotify is running
        if it is not it will error and say spotify is not running, then it will press play pause

        if it is running, check the following
            if Spotify_PID is defined and is true, returns a dictionary with information

            if Spotify_PID is None or False, it will define it as the current spotify PID

            if Spotify_PID is focussed

    Step Two:
        After thread timer and spotify_check, I will get a dictionnary from Spotify_check with info like
            Stats = {
                "Spotify_PID": 134124,
                "Is_Focused": False}

        Then ill pass it to playPauseV6(), ie: playPauseV6(Stats, count)

        where it will do,
            if PID is None:
                log spotify not runing
                pyautogui.press("playpause") 
            
            else:
                if focused:
                    pyautogui.press("playpause") 
                else: 
                    app = Application().connect(process=spotify_PID)
                    app.window().send_keystrokes(" ")

        Have that in a try, so if it raises an exception like "Process with PID={} not found"
        That means spotify pid is wrong, that should not happe if i do it right
        If it does Happen I want it to define Spotify_PID as None


log.debug("")


current_focused_pid = win32process.GetWindowThreadProcessId(win32gui.GetForegroundWindow())

try:
                for p in psutil.process_iter(['name']):
                    if 'Spotify' in p.info['name']:
                        parent = p.parent()
                        if parent != None:
                            spotify_PID = parent.pid
                            break
                
                app = Application().connect(process=spotify_PID)
                app.window().send_keystrokes(" ")

            except Exception as e:
                log.error(f"Exception Raised: {e}")



THis is what Happens when It works:
12:20:03.301 DEBUG - Button_handler: pause song spotify 

12:20:03.301 DEBUG - spotify: 
12:20:03.301 DEBUG - spotify: Spotify Func Has been called
12:20:03.301 DEBUG - spotify: Value of count is: 1

12:20:03.301 DEBUG - spotify: Check if thread is running
12:20:03.302 DEBUG - spotify: thread.names is: MainThread
12:20:03.302 DEBUG - spotify: t_name == MainThread

12:20:03.302 DEBUG - spotify: thread.names is: Thread-1 (sysIcon)
12:20:03.302 DEBUG - spotify: (spotify_timer) not in t_name

12:20:03.302 DEBUG - spotify: Just passed Check if thread is running
12:20:03.302 DEBUG - spotify_timer: spotify_timer Has jsut begun
12:20:03.302 DEBUG - spotify: thread_running is False
12:20:03.303 DEBUG - spotify: Starting: sp_tmr.start()

12:20:03.812 DEBUG - spotify_timer: spotify_timer sleep has just finished
12:20:03.812 DEBUG - spotify_timer: Value of Count: 1
12:20:03.812 DEBUG - spotify_timer: play pause
12:20:03.812 DEBUG - spotify_timer: playPauseV5 is being called
12:20:03.812 DEBUG - playPauseV5: Play Pause Has just started
12:20:03.812 DEBUG - playPauseV5: Getting Currently focused PID
12:20:03.812 DEBUG - playPauseV5: Currently Focused PID is: [24116, 14660]
12:20:03.813 DEBUG - playPauseV5: 
12:20:03.813 DEBUG - playPauseV5: spotify_PID in NOT NONE
C:\Python310\lib\site-packages\pywinauto\application.py:1085: UserWarning: 32-bit application should be automated using 32-bit Python (you use 64-bit Python)
  warnings.warn(



This is what happens when spotify is closed and a new one is oppened
12:24:54.248 DEBUG - Button_handler: pause song spotify 

12:24:54.248 DEBUG - spotify: 
12:24:54.248 DEBUG - spotify: Spotify Func Has been called
12:24:54.248 DEBUG - spotify: Value of count is: 2
12:24:54.248 DEBUG - spotify: Check if thread is running
12:24:54.249 DEBUG - spotify: thread.names is: MainThread
12:24:54.249 DEBUG - spotify: t_name == MainThread
12:24:54.249 DEBUG - spotify: thread.names is: Thread-1 (sysIcon)
12:24:54.249 DEBUG - spotify: (spotify_timer) not in t_name
12:24:54.249 DEBUG - spotify: thread.names is: Thread-13 (spotify_timer)
12:24:54.249 DEBUG - spotify: (spotify_timer) in t_name
12:24:54.249 DEBUG - spotify: Just passed Check if thread is running
Exception in thread Thread-13 (spotify_timer):
Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\pywinauto\application.py", line 958, in connect
    wait_until(timeout, retry_interval, self.is_process_running, value=True)
  File "C:\Python310\lib\site-packages\pywinauto\timings.py", line 375, in wait_until
    raise err
pywinauto.timings.TimeoutError: timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python310\lib\threading.py", line 1009, in _bootstrap_inner
    self.run()
  File "C:\Python310\lib\threading.py", line 946, in run
    self._target(*self._args, **self._kwargs)
  File "c:\Coding\Arduino Stuff\Projects\macro_keyboard\Macro Development\funcs_dev.py", line 264, in spotify_timer
    playPauseV5()
  File "c:\Coding\Arduino Stuff\Projects\macro_keyboard\Macro Development\funcs_dev.py", line 247, in playPauseV5
    app = Application().connect(process=spotify_PID)
  File "C:\Python310\lib\site-packages\pywinauto\application.py", line 960, in connect
    raise ProcessNotFoundError('Process with PID={} not found!'.format(self.process))
pywinauto.application.ProcessNotFoundError: Process with PID=23072 not found!
